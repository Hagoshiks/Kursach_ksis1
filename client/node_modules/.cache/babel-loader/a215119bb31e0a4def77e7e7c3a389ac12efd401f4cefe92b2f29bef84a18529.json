{"ast":null,"code":"var _jsxFileName = \"R:\\\\\\u0423\\u041D\\u0418\\u041A\\\\2 \\u043A\\u0443\\u0440\\u0441 2 \\u0441\\u0435\\u043C\\\\\\u041A\\u0421\\u0438\\u0421\\\\Kursach\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport { Box, Typography, Button, TextField, Paper, List, ListItem, ListItemText, Chip, Dialog, DialogTitle, DialogContent } from '@mui/material';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [socket, setSocket] = useState(null);\n  const [playerName, setPlayerName] = useState('');\n  const [gameState, setGameState] = useState(null);\n  const [betAmount, setBetAmount] = useState(0);\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [error, setError] = useState('');\n  const [authDialogOpen, setAuthDialogOpen] = useState(true);\n  const [authTab, setAuthTab] = useState(1);\n  const [authError, setAuthError] = useState('');\n  const [authState, setAuthState] = useState({\n    isAuthenticated: false,\n    token: null,\n    user: null\n  });\n  const [authForm, setAuthForm] = useState({\n    username: '',\n    password: ''\n  });\n  const [raiseAmount, setRaiseAmount] = useState(0);\n  const [canAct, setCanAct] = useState(false);\n  const [showdownResult, setShowdownResult] = useState(null);\n  const [showCards, setShowCards] = useState(false);\n  useEffect(() => {\n    // Check for stored token\n    const token = localStorage.getItem('token');\n    const user = localStorage.getItem('user');\n    if (token && user) {\n      setAuthState({\n        isAuthenticated: true,\n        token,\n        user: JSON.parse(user)\n      });\n      setAuthDialogOpen(false);\n    }\n  }, []);\n  useEffect(() => {\n    if (authState.isAuthenticated && authState.token) {\n      const newSocket = io('http://localhost:5000', {\n        auth: {\n          token: authState.token\n        }\n      });\n      setSocket(newSocket);\n      newSocket.on('gameState', state => {\n        setGameState(state);\n      });\n      newSocket.on('error', message => {\n        setError(message);\n      });\n      newSocket.on('showdown', result => {\n        setShowdownResult(result);\n        // Hide showdown after 5 seconds\n        setTimeout(() => setShowdownResult(null), 5000);\n      });\n      return () => {\n        newSocket.close();\n      };\n    }\n  }, [authState]);\n  const handleAuthSubmit = async e => {\n    e.preventDefault();\n    setAuthError('');\n    const endpoint = authTab === 0 ? '/api/auth/signin' : '/api/auth/signup';\n    try {\n      const response = await fetch(`http://localhost:5000${endpoint}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(authForm)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setAuthState({\n          isAuthenticated: true,\n          token: data.token,\n          user: data.user\n        });\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('user', JSON.stringify(data.user));\n        setAuthDialogOpen(false);\n        setAuthForm({\n          username: '',\n          password: ''\n        });\n      } else {\n        setAuthError(data.message || 'Authentication failed');\n      }\n    } catch (err) {\n      console.error('Auth error:', err);\n      setAuthError('Cannot connect to server. Please make sure the server is running and MongoDB is installed.');\n    }\n  };\n  const handleLogout = () => {\n    setAuthState({\n      isAuthenticated: false,\n      token: null,\n      user: null\n    });\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    if (socket) {\n      socket.close();\n    }\n  };\n  const joinGame = () => {\n    if (socket && playerName) {\n      socket.emit('joinGame', playerName);\n    }\n  };\n  const placeBet = () => {\n    if (socket && betAmount > 0) {\n      socket.emit('placeBet', betAmount);\n      setBetAmount(0);\n    }\n  };\n  const handleCall = () => {\n    if (socket && gameState) {\n      const currentPlayer = gameState.players.find(p => p.id === socket.id);\n      if (currentPlayer) {\n        const callAmount = gameState.currentBet - currentPlayer.currentBet;\n        socket.emit('placeBet', callAmount);\n      }\n    }\n  };\n  const handleRaise = () => {\n    if (socket && gameState && raiseAmount > 0) {\n      const currentPlayer = gameState.players.find(p => p.id === socket.id);\n      if (currentPlayer) {\n        const totalBet = gameState.currentBet + raiseAmount;\n        if (totalBet <= currentPlayer.chips) {\n          socket.emit('placeBet', totalBet);\n          setRaiseAmount(0);\n        }\n      }\n    }\n  };\n  const handleFold = () => {\n    if (socket) {\n      socket.emit('fold');\n    }\n  };\n  const getCardImage = card => {\n    const value = card.value === '10' ? '0' : card.value;\n    const suit = card.suit === '♠' ? 'S' : card.suit === '♥' ? 'H' : card.suit === '♦' ? 'D' : 'C';\n    return `https://deckofcardsapi.com/static/img/${value}${suit}.png`;\n  };\n  const renderCard = (card, isHidden = false) => {\n    if (isHidden) {\n      return /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: 80,\n          height: 120,\n          position: 'relative',\n          transition: 'transform 0.2s',\n          '&:hover': {\n            transform: 'translateY(-10px)'\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://deckofcardsapi.com/static/img/back.png\",\n          alt: \"Card Back\",\n          style: {\n            width: '100%',\n            height: '100%',\n            objectFit: 'contain',\n            borderRadius: '8px',\n            boxShadow: '0 4px 8px rgba(0,0,0,0.2)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)\n      }, \"hidden\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: 80,\n        height: 120,\n        position: 'relative',\n        transition: 'transform 0.2s',\n        '&:hover': {\n          transform: 'translateY(-10px)'\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: getCardImage(card),\n        alt: `${card.value}${card.suit}`,\n        style: {\n          width: '100%',\n          height: '100%',\n          objectFit: 'contain',\n          borderRadius: '8px',\n          boxShadow: '0 4px 8px rgba(0,0,0,0.2)'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)\n    }, `${card.value}${card.suit}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this);\n  };\n  const renderPlayerStatus = player => {\n    const statuses = [];\n    if (player.isDealer) statuses.push('D');\n    if (player.isSmallBlind) statuses.push('SB');\n    if (player.isBigBlind) statuses.push('BB');\n    return statuses.map(status => /*#__PURE__*/_jsxDEV(Chip, {\n      label: status,\n      size: \"small\",\n      sx: {\n        ml: 1,\n        bgcolor: 'primary.main',\n        color: 'white'\n      }\n    }, status, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this));\n  };\n  const renderPlayerCards = player => {\n    if (player.cards.length === 0) return null;\n    const isCurrentPlayer = player.id === (socket === null || socket === void 0 ? void 0 : socket.id);\n    const shouldShowCards = isCurrentPlayer && showCards;\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        gap: 1,\n        mt: 2,\n        justifyContent: 'center',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          gap: 1\n        },\n        children: player.cards.map((card, index) => renderCard(card, !shouldShowCards))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), isCurrentPlayer && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        size: \"small\",\n        onClick: () => setShowCards(!showCards),\n        sx: {\n          mt: 1\n        },\n        children: showCards ? 'Hide Cards' : 'Show Cards'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this);\n  };\n  const renderGameControls = () => {\n    var _gameState$players$ga;\n    if (!gameState || !socket) return null;\n    const currentPlayer = gameState.players.find(p => p.id === socket.id);\n    if (!currentPlayer || !currentPlayer.isActive) return null;\n    const isCurrentTurn = ((_gameState$players$ga = gameState.players[gameState.currentPlayer]) === null || _gameState$players$ga === void 0 ? void 0 : _gameState$players$ga.id) === socket.id;\n    const callAmount = gameState.currentBet - currentPlayer.currentBet;\n    const canCall = callAmount > 0 && callAmount <= currentPlayer.chips;\n    const canRaise = gameState.minimumRaise <= currentPlayer.chips - gameState.currentBet;\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          gap: 2,\n          justifyContent: 'center',\n          alignItems: 'center',\n          flexWrap: 'wrap'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleCall,\n          disabled: !isCurrentTurn || !canCall,\n          sx: {\n            minWidth: 100\n          },\n          children: [\"Call $\", callAmount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 1,\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            type: \"number\",\n            label: \"Raise Amount\",\n            value: raiseAmount,\n            onChange: e => setRaiseAmount(Number(e.target.value)),\n            disabled: !isCurrentTurn || !canRaise,\n            size: \"small\",\n            sx: {\n              width: 120\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            onClick: handleRaise,\n            disabled: !isCurrentTurn || !canRaise || raiseAmount < gameState.minimumRaise,\n            sx: {\n              minWidth: 100\n            },\n            children: \"Raise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"error\",\n          onClick: handleFold,\n          disabled: !isCurrentTurn,\n          sx: {\n            minWidth: 100\n          },\n          children: \"Fold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this), isCurrentTurn && /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"primary\",\n        sx: {\n          mt: 1,\n          textAlign: 'center'\n        },\n        children: \"Your turn to act\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this);\n  };\n  const renderGameInfo = () => {\n    if (!gameState) return null;\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2,\n        mb: 2,\n        bgcolor: 'background.paper'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: [\"Game Phase: \", gameState.phase.charAt(0).toUpperCase() + gameState.phase.slice(1)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Current Bet: $\", gameState.currentBet]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Minimum Raise: $\", gameState.minimumRaise]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this), gameState.lastAction && /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Last Action: \", gameState.lastAction, \" $\", gameState.lastActionAmount > 0 ? `($${gameState.lastActionAmount})` : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this);\n  };\n  const renderShowdown = () => {\n    if (!showdownResult) return null;\n    const winner = gameState === null || gameState === void 0 ? void 0 : gameState.players.find(p => p.id === showdownResult.winner);\n    const playerHands = showdownResult.players.map(ph => {\n      const player = gameState === null || gameState === void 0 ? void 0 : gameState.players.find(p => p.id === ph.id);\n      return {\n        player,\n        hand: ph.hand\n      };\n    });\n    return /*#__PURE__*/_jsxDEV(Dialog, {\n      open: true,\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Showdown Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"primary\",\n            gutterBottom: true,\n            children: [\"Winner: \", winner === null || winner === void 0 ? void 0 : winner.name, \" with \", showdownResult.hand]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: playerHands.map(({\n              player,\n              hand\n            }) => /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: player === null || player === void 0 ? void 0 : player.name,\n                secondary: `Hand: ${hand}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 19\n              }, this)\n            }, player === null || player === void 0 ? void 0 : player.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Texas Hold'em Poker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this), !isConnected && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsConnected(true),\n        children: \"Join Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"game-table\",\n      children: isConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"community-cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-area\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome-screen\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Welcome to Texas Hold'em Poker!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Click \\\"Join Game\\\" to start playing.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 461,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2I9pK9tc3qjLEOA1qzvbdc1zvP8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","Box","Typography","Button","TextField","Paper","List","ListItem","ListItemText","Chip","Dialog","DialogTitle","DialogContent","jsxDEV","_jsxDEV","App","_s","isConnected","setIsConnected","socket","setSocket","playerName","setPlayerName","gameState","setGameState","betAmount","setBetAmount","drawerOpen","setDrawerOpen","error","setError","authDialogOpen","setAuthDialogOpen","authTab","setAuthTab","authError","setAuthError","authState","setAuthState","isAuthenticated","token","user","authForm","setAuthForm","username","password","raiseAmount","setRaiseAmount","canAct","setCanAct","showdownResult","setShowdownResult","showCards","setShowCards","localStorage","getItem","JSON","parse","newSocket","auth","on","state","message","result","setTimeout","close","handleAuthSubmit","e","preventDefault","endpoint","response","fetch","method","headers","body","stringify","data","json","ok","setItem","err","console","handleLogout","removeItem","joinGame","emit","placeBet","handleCall","currentPlayer","players","find","p","id","callAmount","currentBet","handleRaise","totalBet","chips","handleFold","getCardImage","card","value","suit","renderCard","isHidden","sx","width","height","position","transition","transform","children","src","alt","style","objectFit","borderRadius","boxShadow","fileName","_jsxFileName","lineNumber","columnNumber","renderPlayerStatus","player","statuses","isDealer","push","isSmallBlind","isBigBlind","map","status","label","size","ml","bgcolor","color","renderPlayerCards","cards","length","isCurrentPlayer","shouldShowCards","display","gap","mt","justifyContent","flexDirection","alignItems","index","variant","onClick","renderGameControls","_gameState$players$ga","isActive","isCurrentTurn","canCall","canRaise","minimumRaise","flexWrap","disabled","minWidth","type","onChange","Number","target","textAlign","renderGameInfo","mb","gutterBottom","phase","charAt","toUpperCase","slice","lastAction","lastActionAmount","renderShowdown","winner","playerHands","ph","hand","open","maxWidth","fullWidth","name","primary","secondary","className","_c","$RefreshReg$"],"sources":["R:/УНИК/2 курс 2 сем/КСиС/Kursach/client/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { io, Socket } from 'socket.io-client';\nimport { Box, Container, Typography, Button, TextField, Grid, Paper, AppBar, Toolbar, Drawer, List, ListItem, ListItemText, ListItemIcon, Chip, Dialog, DialogTitle, DialogContent, DialogActions, Tabs, Tab } from '@mui/material';\nimport CasinoIcon from '@mui/icons-material/Casino';\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\nimport PeopleIcon from '@mui/icons-material/People';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport HelpIcon from '@mui/icons-material/Help';\nimport LoginIcon from '@mui/icons-material/Login';\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\nimport './App.css';\n\ninterface Card {\n  suit: '♠' | '♥' | '♦' | '♣';\n  value: '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10' | 'J' | 'Q' | 'K' | 'A';\n}\n\ninterface Player {\n  id: string;\n  name: string;\n  chips: number;\n  cards: Card[];\n  isActive: boolean;\n  currentBet: number;\n  isDealer: boolean;\n  isSmallBlind: boolean;\n  isBigBlind: boolean;\n}\n\ninterface GameState {\n  players: Player[];\n  communityCards: Card[];\n  pot: number;\n  currentPlayer: number;\n  dealer: number;\n  smallBlind: number;\n  bigBlind: number;\n  currentBet: number;\n  minimumRaise: number;\n  phase: 'waiting' | 'preflop' | 'flop' | 'turn' | 'river' | 'showdown';\n  lastAction: string;\n  lastActionAmount: number;\n}\n\ninterface AuthState {\n  isAuthenticated: boolean;\n  token: string | null;\n  user: {\n    id: string;\n    username: string;\n    chips: number;\n  } | null;\n}\n\ninterface ShowdownResult {\n  winner: string;\n  hand: string;\n  players: {\n    id: string;\n    hand: string;\n  }[];\n}\n\nfunction App() {\n  const [isConnected, setIsConnected] = useState(false);\n  const [socket, setSocket] = useState<Socket | null>(null);\n  const [playerName, setPlayerName] = useState('');\n  const [gameState, setGameState] = useState<GameState | null>(null);\n  const [betAmount, setBetAmount] = useState(0);\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [error, setError] = useState('');\n  const [authDialogOpen, setAuthDialogOpen] = useState(true);\n  const [authTab, setAuthTab] = useState(1);\n  const [authError, setAuthError] = useState('');\n  const [authState, setAuthState] = useState<AuthState>({\n    isAuthenticated: false,\n    token: null,\n    user: null\n  });\n  const [authForm, setAuthForm] = useState({\n    username: '',\n    password: ''\n  });\n  const [raiseAmount, setRaiseAmount] = useState(0);\n  const [canAct, setCanAct] = useState(false);\n  const [showdownResult, setShowdownResult] = useState<ShowdownResult | null>(null);\n  const [showCards, setShowCards] = useState(false);\n\n  useEffect(() => {\n    // Check for stored token\n    const token = localStorage.getItem('token');\n    const user = localStorage.getItem('user');\n    if (token && user) {\n      setAuthState({\n        isAuthenticated: true,\n        token,\n        user: JSON.parse(user)\n      });\n      setAuthDialogOpen(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (authState.isAuthenticated && authState.token) {\n      const newSocket = io('http://localhost:5000', {\n        auth: {\n          token: authState.token\n        }\n      });\n      setSocket(newSocket);\n\n      newSocket.on('gameState', (state: GameState) => {\n        setGameState(state);\n      });\n\n      newSocket.on('error', (message: string) => {\n        setError(message);\n      });\n\n      newSocket.on('showdown', (result: ShowdownResult) => {\n        setShowdownResult(result);\n        // Hide showdown after 5 seconds\n        setTimeout(() => setShowdownResult(null), 5000);\n      });\n\n      return () => {\n        newSocket.close();\n      };\n    }\n  }, [authState]);\n\n  const handleAuthSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setAuthError('');\n    const endpoint = authTab === 0 ? '/api/auth/signin' : '/api/auth/signup';\n    \n    try {\n      const response = await fetch(`http://localhost:5000${endpoint}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(authForm)\n      });\n\n      const data = await response.json();\n      \n      if (response.ok) {\n        setAuthState({\n          isAuthenticated: true,\n          token: data.token,\n          user: data.user\n        });\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('user', JSON.stringify(data.user));\n        setAuthDialogOpen(false);\n        setAuthForm({ username: '', password: '' });\n      } else {\n        setAuthError(data.message || 'Authentication failed');\n      }\n    } catch (err) {\n      console.error('Auth error:', err);\n      setAuthError('Cannot connect to server. Please make sure the server is running and MongoDB is installed.');\n    }\n  };\n\n  const handleLogout = () => {\n    setAuthState({\n      isAuthenticated: false,\n      token: null,\n      user: null\n    });\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    if (socket) {\n      socket.close();\n    }\n  };\n\n  const joinGame = () => {\n    if (socket && playerName) {\n      socket.emit('joinGame', playerName);\n    }\n  };\n\n  const placeBet = () => {\n    if (socket && betAmount > 0) {\n      socket.emit('placeBet', betAmount);\n      setBetAmount(0);\n    }\n  };\n\n  const handleCall = () => {\n    if (socket && gameState) {\n      const currentPlayer = gameState.players.find(p => p.id === socket.id);\n      if (currentPlayer) {\n        const callAmount = gameState.currentBet - currentPlayer.currentBet;\n        socket.emit('placeBet', callAmount);\n      }\n    }\n  };\n\n  const handleRaise = () => {\n    if (socket && gameState && raiseAmount > 0) {\n      const currentPlayer = gameState.players.find(p => p.id === socket.id);\n      if (currentPlayer) {\n        const totalBet = gameState.currentBet + raiseAmount;\n        if (totalBet <= currentPlayer.chips) {\n          socket.emit('placeBet', totalBet);\n          setRaiseAmount(0);\n        }\n      }\n    }\n  };\n\n  const handleFold = () => {\n    if (socket) {\n      socket.emit('fold');\n    }\n  };\n\n  const getCardImage = (card: Card) => {\n    const value = card.value === '10' ? '0' : card.value;\n    const suit = card.suit === '♠' ? 'S' : \n                 card.suit === '♥' ? 'H' : \n                 card.suit === '♦' ? 'D' : 'C';\n    return `https://deckofcardsapi.com/static/img/${value}${suit}.png`;\n  };\n\n  const renderCard = (card: Card, isHidden: boolean = false) => {\n    if (isHidden) {\n      return (\n        <Box\n          key=\"hidden\"\n          sx={{\n            width: 80,\n            height: 120,\n            position: 'relative',\n            transition: 'transform 0.2s',\n            '&:hover': {\n              transform: 'translateY(-10px)',\n            },\n          }}\n        >\n          <img\n            src=\"https://deckofcardsapi.com/static/img/back.png\"\n            alt=\"Card Back\"\n            style={{\n              width: '100%',\n              height: '100%',\n              objectFit: 'contain',\n              borderRadius: '8px',\n              boxShadow: '0 4px 8px rgba(0,0,0,0.2)',\n            }}\n          />\n        </Box>\n      );\n    }\n\n    return (\n      <Box\n        key={`${card.value}${card.suit}`}\n        sx={{\n          width: 80,\n          height: 120,\n          position: 'relative',\n          transition: 'transform 0.2s',\n          '&:hover': {\n            transform: 'translateY(-10px)',\n          },\n        }}\n      >\n        <img\n          src={getCardImage(card)}\n          alt={`${card.value}${card.suit}`}\n          style={{\n            width: '100%',\n            height: '100%',\n            objectFit: 'contain',\n            borderRadius: '8px',\n            boxShadow: '0 4px 8px rgba(0,0,0,0.2)',\n          }}\n        />\n      </Box>\n    );\n  };\n\n  const renderPlayerStatus = (player: Player) => {\n    const statuses = [];\n    if (player.isDealer) statuses.push('D');\n    if (player.isSmallBlind) statuses.push('SB');\n    if (player.isBigBlind) statuses.push('BB');\n    return statuses.map(status => (\n      <Chip\n        key={status}\n        label={status}\n        size=\"small\"\n        sx={{ ml: 1, bgcolor: 'primary.main', color: 'white' }}\n      />\n    ));\n  };\n\n  const renderPlayerCards = (player: Player) => {\n    if (player.cards.length === 0) return null;\n    \n    const isCurrentPlayer = player.id === socket?.id;\n    const shouldShowCards = isCurrentPlayer && showCards;\n\n    return (\n      <Box sx={{ \n        display: 'flex', \n        gap: 1, \n        mt: 2,\n        justifyContent: 'center',\n        flexDirection: 'column',\n        alignItems: 'center'\n      }}>\n        <Box sx={{ display: 'flex', gap: 1 }}>\n          {player.cards.map((card, index) => renderCard(card, !shouldShowCards))}\n        </Box>\n        {isCurrentPlayer && (\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            onClick={() => setShowCards(!showCards)}\n            sx={{ mt: 1 }}\n          >\n            {showCards ? 'Hide Cards' : 'Show Cards'}\n          </Button>\n        )}\n      </Box>\n    );\n  };\n\n  const renderGameControls = () => {\n    if (!gameState || !socket) return null;\n\n    const currentPlayer = gameState.players.find(p => p.id === socket.id);\n    if (!currentPlayer || !currentPlayer.isActive) return null;\n\n    const isCurrentTurn = gameState.players[gameState.currentPlayer]?.id === socket.id;\n    const callAmount = gameState.currentBet - currentPlayer.currentBet;\n    const canCall = callAmount > 0 && callAmount <= currentPlayer.chips;\n    const canRaise = gameState.minimumRaise <= currentPlayer.chips - gameState.currentBet;\n\n    return (\n      <Paper sx={{ p: 2 }}>\n        <Box sx={{ display: 'flex', gap: 2, justifyContent: 'center', alignItems: 'center', flexWrap: 'wrap' }}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleCall}\n            disabled={!isCurrentTurn || !canCall}\n            sx={{ minWidth: 100 }}\n          >\n            Call ${callAmount}\n          </Button>\n          \n          <Box sx={{ display: 'flex', gap: 1, alignItems: 'center' }}>\n            <TextField\n              type=\"number\"\n              label=\"Raise Amount\"\n              value={raiseAmount}\n              onChange={(e) => setRaiseAmount(Number(e.target.value))}\n              disabled={!isCurrentTurn || !canRaise}\n              size=\"small\"\n              sx={{ width: 120 }}\n            />\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={handleRaise}\n              disabled={!isCurrentTurn || !canRaise || raiseAmount < gameState.minimumRaise}\n              sx={{ minWidth: 100 }}\n            >\n              Raise\n            </Button>\n          </Box>\n\n          <Button\n            variant=\"contained\"\n            color=\"error\"\n            onClick={handleFold}\n            disabled={!isCurrentTurn}\n            sx={{ minWidth: 100 }}\n          >\n            Fold\n          </Button>\n        </Box>\n\n        {isCurrentTurn && (\n          <Typography color=\"primary\" sx={{ mt: 1, textAlign: 'center' }}>\n            Your turn to act\n          </Typography>\n        )}\n      </Paper>\n    );\n  };\n\n  const renderGameInfo = () => {\n    if (!gameState) return null;\n\n    return (\n      <Paper sx={{ p: 2, mb: 2, bgcolor: 'background.paper' }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Game Phase: {gameState.phase.charAt(0).toUpperCase() + gameState.phase.slice(1)}\n        </Typography>\n        <Typography>\n          Current Bet: ${gameState.currentBet}\n        </Typography>\n        <Typography>\n          Minimum Raise: ${gameState.minimumRaise}\n        </Typography>\n        {gameState.lastAction && (\n          <Typography>\n            Last Action: {gameState.lastAction} ${gameState.lastActionAmount > 0 ? `($${gameState.lastActionAmount})` : ''}\n          </Typography>\n        )}\n      </Paper>\n    );\n  };\n\n  const renderShowdown = () => {\n    if (!showdownResult) return null;\n\n    const winner = gameState?.players.find(p => p.id === showdownResult.winner);\n    const playerHands = showdownResult.players.map(ph => {\n      const player = gameState?.players.find(p => p.id === ph.id);\n      return { player, hand: ph.hand };\n    });\n\n    return (\n      <Dialog\n        open={true}\n        maxWidth=\"sm\"\n        fullWidth\n      >\n        <DialogTitle>Showdown Results</DialogTitle>\n        <DialogContent>\n          <Box sx={{ p: 2 }}>\n            <Typography variant=\"h6\" color=\"primary\" gutterBottom>\n              Winner: {winner?.name} with {showdownResult.hand}\n            </Typography>\n            <List>\n              {playerHands.map(({ player, hand }) => (\n                <ListItem key={player?.id}>\n                  <ListItemText\n                    primary={player?.name}\n                    secondary={`Hand: ${hand}`}\n                  />\n                </ListItem>\n              ))}\n            </List>\n          </Box>\n        </DialogContent>\n      </Dialog>\n    );\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <h1>Texas Hold'em Poker</h1>\n        {!isConnected && (\n          <button onClick={() => setIsConnected(true)}>\n            Join Game\n          </button>\n        )}\n      </header>\n      <main className=\"game-table\">\n        {isConnected ? (\n          <div className=\"game-content\">\n            <div className=\"community-cards\">\n              {/* Community cards will go here */}\n            </div>\n            <div className=\"player-area\">\n              {/* Player cards and controls will go here */}\n            </div>\n          </div>\n        ) : (\n          <div className=\"welcome-screen\">\n            <p>Welcome to Texas Hold'em Poker!</p>\n            <p>Click \"Join Game\" to start playing.</p>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,EAAE,QAAgB,kBAAkB;AAC7C,SAASC,GAAG,EAAaC,UAAU,EAAEC,MAAM,EAAEC,SAAS,EAAQC,KAAK,EAA2BC,IAAI,EAAEC,QAAQ,EAAEC,YAAY,EAAgBC,IAAI,EAAEC,MAAM,EAAEC,WAAW,EAAEC,aAAa,QAAkC,eAAe;AAQnO,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAqDnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACqB,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,CAAgB,IAAI,CAAC;EACzD,MAAM,CAACuB,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACyB,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAmB,IAAI,CAAC;EAClE,MAAM,CAAC2B,SAAS,EAAEC,YAAY,CAAC,GAAG5B,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAAC6B,UAAU,EAAEC,aAAa,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAAC+B,KAAK,EAAEC,QAAQ,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiC,cAAc,EAAEC,iBAAiB,CAAC,GAAGlC,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACmC,OAAO,EAAEC,UAAU,CAAC,GAAGpC,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACqC,SAAS,EAAEC,YAAY,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACuC,SAAS,EAAEC,YAAY,CAAC,GAAGxC,QAAQ,CAAY;IACpDyC,eAAe,EAAE,KAAK;IACtBC,KAAK,EAAE,IAAI;IACXC,IAAI,EAAE;EACR,CAAC,CAAC;EACF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG7C,QAAQ,CAAC;IACvC8C,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGjD,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACkD,MAAM,EAAEC,SAAS,CAAC,GAAGnD,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACoD,cAAc,EAAEC,iBAAiB,CAAC,GAAGrD,QAAQ,CAAwB,IAAI,CAAC;EACjF,MAAM,CAACsD,SAAS,EAAEC,YAAY,CAAC,GAAGvD,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMyC,KAAK,GAAGc,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMd,IAAI,GAAGa,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACzC,IAAIf,KAAK,IAAIC,IAAI,EAAE;MACjBH,YAAY,CAAC;QACXC,eAAe,EAAE,IAAI;QACrBC,KAAK;QACLC,IAAI,EAAEe,IAAI,CAACC,KAAK,CAAChB,IAAI;MACvB,CAAC,CAAC;MACFT,iBAAiB,CAAC,KAAK,CAAC;IAC1B;EACF,CAAC,EAAE,EAAE,CAAC;EAENjC,SAAS,CAAC,MAAM;IACd,IAAIsC,SAAS,CAACE,eAAe,IAAIF,SAAS,CAACG,KAAK,EAAE;MAChD,MAAMkB,SAAS,GAAG1D,EAAE,CAAC,uBAAuB,EAAE;QAC5C2D,IAAI,EAAE;UACJnB,KAAK,EAAEH,SAAS,CAACG;QACnB;MACF,CAAC,CAAC;MACFpB,SAAS,CAACsC,SAAS,CAAC;MAEpBA,SAAS,CAACE,EAAE,CAAC,WAAW,EAAGC,KAAgB,IAAK;QAC9CrC,YAAY,CAACqC,KAAK,CAAC;MACrB,CAAC,CAAC;MAEFH,SAAS,CAACE,EAAE,CAAC,OAAO,EAAGE,OAAe,IAAK;QACzChC,QAAQ,CAACgC,OAAO,CAAC;MACnB,CAAC,CAAC;MAEFJ,SAAS,CAACE,EAAE,CAAC,UAAU,EAAGG,MAAsB,IAAK;QACnDZ,iBAAiB,CAACY,MAAM,CAAC;QACzB;QACAC,UAAU,CAAC,MAAMb,iBAAiB,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;MACjD,CAAC,CAAC;MAEF,OAAO,MAAM;QACXO,SAAS,CAACO,KAAK,CAAC,CAAC;MACnB,CAAC;IACH;EACF,CAAC,EAAE,CAAC5B,SAAS,CAAC,CAAC;EAEf,MAAM6B,gBAAgB,GAAG,MAAOC,CAAkB,IAAK;IACrDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBhC,YAAY,CAAC,EAAE,CAAC;IAChB,MAAMiC,QAAQ,GAAGpC,OAAO,KAAK,CAAC,GAAG,kBAAkB,GAAG,kBAAkB;IAExE,IAAI;MACF,MAAMqC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwBF,QAAQ,EAAE,EAAE;QAC/DG,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAElB,IAAI,CAACmB,SAAS,CAACjC,QAAQ;MAC/B,CAAC,CAAC;MAEF,MAAMkC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAElC,IAAIP,QAAQ,CAACQ,EAAE,EAAE;QACfxC,YAAY,CAAC;UACXC,eAAe,EAAE,IAAI;UACrBC,KAAK,EAAEoC,IAAI,CAACpC,KAAK;UACjBC,IAAI,EAAEmC,IAAI,CAACnC;QACb,CAAC,CAAC;QACFa,YAAY,CAACyB,OAAO,CAAC,OAAO,EAAEH,IAAI,CAACpC,KAAK,CAAC;QACzCc,YAAY,CAACyB,OAAO,CAAC,MAAM,EAAEvB,IAAI,CAACmB,SAAS,CAACC,IAAI,CAACnC,IAAI,CAAC,CAAC;QACvDT,iBAAiB,CAAC,KAAK,CAAC;QACxBW,WAAW,CAAC;UAAEC,QAAQ,EAAE,EAAE;UAAEC,QAAQ,EAAE;QAAG,CAAC,CAAC;MAC7C,CAAC,MAAM;QACLT,YAAY,CAACwC,IAAI,CAACd,OAAO,IAAI,uBAAuB,CAAC;MACvD;IACF,CAAC,CAAC,OAAOkB,GAAG,EAAE;MACZC,OAAO,CAACpD,KAAK,CAAC,aAAa,EAAEmD,GAAG,CAAC;MACjC5C,YAAY,CAAC,4FAA4F,CAAC;IAC5G;EACF,CAAC;EAED,MAAM8C,YAAY,GAAGA,CAAA,KAAM;IACzB5C,YAAY,CAAC;MACXC,eAAe,EAAE,KAAK;MACtBC,KAAK,EAAE,IAAI;MACXC,IAAI,EAAE;IACR,CAAC,CAAC;IACFa,YAAY,CAAC6B,UAAU,CAAC,OAAO,CAAC;IAChC7B,YAAY,CAAC6B,UAAU,CAAC,MAAM,CAAC;IAC/B,IAAIhE,MAAM,EAAE;MACVA,MAAM,CAAC8C,KAAK,CAAC,CAAC;IAChB;EACF,CAAC;EAED,MAAMmB,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAIjE,MAAM,IAAIE,UAAU,EAAE;MACxBF,MAAM,CAACkE,IAAI,CAAC,UAAU,EAAEhE,UAAU,CAAC;IACrC;EACF,CAAC;EAED,MAAMiE,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAInE,MAAM,IAAIM,SAAS,GAAG,CAAC,EAAE;MAC3BN,MAAM,CAACkE,IAAI,CAAC,UAAU,EAAE5D,SAAS,CAAC;MAClCC,YAAY,CAAC,CAAC,CAAC;IACjB;EACF,CAAC;EAED,MAAM6D,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIpE,MAAM,IAAII,SAAS,EAAE;MACvB,MAAMiE,aAAa,GAAGjE,SAAS,CAACkE,OAAO,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKzE,MAAM,CAACyE,EAAE,CAAC;MACrE,IAAIJ,aAAa,EAAE;QACjB,MAAMK,UAAU,GAAGtE,SAAS,CAACuE,UAAU,GAAGN,aAAa,CAACM,UAAU;QAClE3E,MAAM,CAACkE,IAAI,CAAC,UAAU,EAAEQ,UAAU,CAAC;MACrC;IACF;EACF,CAAC;EAED,MAAME,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI5E,MAAM,IAAII,SAAS,IAAIuB,WAAW,GAAG,CAAC,EAAE;MAC1C,MAAM0C,aAAa,GAAGjE,SAAS,CAACkE,OAAO,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKzE,MAAM,CAACyE,EAAE,CAAC;MACrE,IAAIJ,aAAa,EAAE;QACjB,MAAMQ,QAAQ,GAAGzE,SAAS,CAACuE,UAAU,GAAGhD,WAAW;QACnD,IAAIkD,QAAQ,IAAIR,aAAa,CAACS,KAAK,EAAE;UACnC9E,MAAM,CAACkE,IAAI,CAAC,UAAU,EAAEW,QAAQ,CAAC;UACjCjD,cAAc,CAAC,CAAC,CAAC;QACnB;MACF;IACF;EACF,CAAC;EAED,MAAMmD,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAI/E,MAAM,EAAE;MACVA,MAAM,CAACkE,IAAI,CAAC,MAAM,CAAC;IACrB;EACF,CAAC;EAED,MAAMc,YAAY,GAAIC,IAAU,IAAK;IACnC,MAAMC,KAAK,GAAGD,IAAI,CAACC,KAAK,KAAK,IAAI,GAAG,GAAG,GAAGD,IAAI,CAACC,KAAK;IACpD,MAAMC,IAAI,GAAGF,IAAI,CAACE,IAAI,KAAK,GAAG,GAAG,GAAG,GACvBF,IAAI,CAACE,IAAI,KAAK,GAAG,GAAG,GAAG,GACvBF,IAAI,CAACE,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG;IAC1C,OAAO,yCAAyCD,KAAK,GAAGC,IAAI,MAAM;EACpE,CAAC;EAED,MAAMC,UAAU,GAAGA,CAACH,IAAU,EAAEI,QAAiB,GAAG,KAAK,KAAK;IAC5D,IAAIA,QAAQ,EAAE;MACZ,oBACE1F,OAAA,CAACb,GAAG;QAEFwG,EAAE,EAAE;UACFC,KAAK,EAAE,EAAE;UACTC,MAAM,EAAE,GAAG;UACXC,QAAQ,EAAE,UAAU;UACpBC,UAAU,EAAE,gBAAgB;UAC5B,SAAS,EAAE;YACTC,SAAS,EAAE;UACb;QACF,CAAE;QAAAC,QAAA,eAEFjG,OAAA;UACEkG,GAAG,EAAC,gDAAgD;UACpDC,GAAG,EAAC,WAAW;UACfC,KAAK,EAAE;YACLR,KAAK,EAAE,MAAM;YACbC,MAAM,EAAE,MAAM;YACdQ,SAAS,EAAE,SAAS;YACpBC,YAAY,EAAE,KAAK;YACnBC,SAAS,EAAE;UACb;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC,GArBE,QAAQ;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAsBT,CAAC;IAEV;IAEA,oBACE3G,OAAA,CAACb,GAAG;MAEFwG,EAAE,EAAE;QACFC,KAAK,EAAE,EAAE;QACTC,MAAM,EAAE,GAAG;QACXC,QAAQ,EAAE,UAAU;QACpBC,UAAU,EAAE,gBAAgB;QAC5B,SAAS,EAAE;UACTC,SAAS,EAAE;QACb;MACF,CAAE;MAAAC,QAAA,eAEFjG,OAAA;QACEkG,GAAG,EAAEb,YAAY,CAACC,IAAI,CAAE;QACxBa,GAAG,EAAE,GAAGb,IAAI,CAACC,KAAK,GAAGD,IAAI,CAACE,IAAI,EAAG;QACjCY,KAAK,EAAE;UACLR,KAAK,EAAE,MAAM;UACbC,MAAM,EAAE,MAAM;UACdQ,SAAS,EAAE,SAAS;UACpBC,YAAY,EAAE,KAAK;UACnBC,SAAS,EAAE;QACb;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC,GArBG,GAAGrB,IAAI,CAACC,KAAK,GAAGD,IAAI,CAACE,IAAI,EAAE;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAsB7B,CAAC;EAEV,CAAC;EAED,MAAMC,kBAAkB,GAAIC,MAAc,IAAK;IAC7C,MAAMC,QAAQ,GAAG,EAAE;IACnB,IAAID,MAAM,CAACE,QAAQ,EAAED,QAAQ,CAACE,IAAI,CAAC,GAAG,CAAC;IACvC,IAAIH,MAAM,CAACI,YAAY,EAAEH,QAAQ,CAACE,IAAI,CAAC,IAAI,CAAC;IAC5C,IAAIH,MAAM,CAACK,UAAU,EAAEJ,QAAQ,CAACE,IAAI,CAAC,IAAI,CAAC;IAC1C,OAAOF,QAAQ,CAACK,GAAG,CAACC,MAAM,iBACxBpH,OAAA,CAACL,IAAI;MAEH0H,KAAK,EAAED,MAAO;MACdE,IAAI,EAAC,OAAO;MACZ3B,EAAE,EAAE;QAAE4B,EAAE,EAAE,CAAC;QAAEC,OAAO,EAAE,cAAc;QAAEC,KAAK,EAAE;MAAQ;IAAE,GAHlDL,MAAM;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIZ,CACF,CAAC;EACJ,CAAC;EAED,MAAMe,iBAAiB,GAAIb,MAAc,IAAK;IAC5C,IAAIA,MAAM,CAACc,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;IAE1C,MAAMC,eAAe,GAAGhB,MAAM,CAAC/B,EAAE,MAAKzE,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEyE,EAAE;IAChD,MAAMgD,eAAe,GAAGD,eAAe,IAAIvF,SAAS;IAEpD,oBACEtC,OAAA,CAACb,GAAG;MAACwG,EAAE,EAAE;QACPoC,OAAO,EAAE,MAAM;QACfC,GAAG,EAAE,CAAC;QACNC,EAAE,EAAE,CAAC;QACLC,cAAc,EAAE,QAAQ;QACxBC,aAAa,EAAE,QAAQ;QACvBC,UAAU,EAAE;MACd,CAAE;MAAAnC,QAAA,gBACAjG,OAAA,CAACb,GAAG;QAACwG,EAAE,EAAE;UAAEoC,OAAO,EAAE,MAAM;UAAEC,GAAG,EAAE;QAAE,CAAE;QAAA/B,QAAA,EAClCY,MAAM,CAACc,KAAK,CAACR,GAAG,CAAC,CAAC7B,IAAI,EAAE+C,KAAK,KAAK5C,UAAU,CAACH,IAAI,EAAE,CAACwC,eAAe,CAAC;MAAC;QAAAtB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE,CAAC,EACLkB,eAAe,iBACd7H,OAAA,CAACX,MAAM;QACLiJ,OAAO,EAAC,UAAU;QAClBhB,IAAI,EAAC,OAAO;QACZiB,OAAO,EAAEA,CAAA,KAAMhG,YAAY,CAAC,CAACD,SAAS,CAAE;QACxCqD,EAAE,EAAE;UAAEsC,EAAE,EAAE;QAAE,CAAE;QAAAhC,QAAA,EAEb3D,SAAS,GAAG,YAAY,GAAG;MAAY;QAAAkE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CACT;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAEV,CAAC;EAED,MAAM6B,kBAAkB,GAAGA,CAAA,KAAM;IAAA,IAAAC,qBAAA;IAC/B,IAAI,CAAChI,SAAS,IAAI,CAACJ,MAAM,EAAE,OAAO,IAAI;IAEtC,MAAMqE,aAAa,GAAGjE,SAAS,CAACkE,OAAO,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKzE,MAAM,CAACyE,EAAE,CAAC;IACrE,IAAI,CAACJ,aAAa,IAAI,CAACA,aAAa,CAACgE,QAAQ,EAAE,OAAO,IAAI;IAE1D,MAAMC,aAAa,GAAG,EAAAF,qBAAA,GAAAhI,SAAS,CAACkE,OAAO,CAAClE,SAAS,CAACiE,aAAa,CAAC,cAAA+D,qBAAA,uBAA1CA,qBAAA,CAA4C3D,EAAE,MAAKzE,MAAM,CAACyE,EAAE;IAClF,MAAMC,UAAU,GAAGtE,SAAS,CAACuE,UAAU,GAAGN,aAAa,CAACM,UAAU;IAClE,MAAM4D,OAAO,GAAG7D,UAAU,GAAG,CAAC,IAAIA,UAAU,IAAIL,aAAa,CAACS,KAAK;IACnE,MAAM0D,QAAQ,GAAGpI,SAAS,CAACqI,YAAY,IAAIpE,aAAa,CAACS,KAAK,GAAG1E,SAAS,CAACuE,UAAU;IAErF,oBACEhF,OAAA,CAACT,KAAK;MAACoG,EAAE,EAAE;QAAEd,CAAC,EAAE;MAAE,CAAE;MAAAoB,QAAA,gBAClBjG,OAAA,CAACb,GAAG;QAACwG,EAAE,EAAE;UAAEoC,OAAO,EAAE,MAAM;UAAEC,GAAG,EAAE,CAAC;UAAEE,cAAc,EAAE,QAAQ;UAAEE,UAAU,EAAE,QAAQ;UAAEW,QAAQ,EAAE;QAAO,CAAE;QAAA9C,QAAA,gBACrGjG,OAAA,CAACX,MAAM;UACLiJ,OAAO,EAAC,WAAW;UACnBb,KAAK,EAAC,SAAS;UACfc,OAAO,EAAE9D,UAAW;UACpBuE,QAAQ,EAAE,CAACL,aAAa,IAAI,CAACC,OAAQ;UACrCjD,EAAE,EAAE;YAAEsD,QAAQ,EAAE;UAAI,CAAE;UAAAhD,QAAA,GACvB,QACO,EAAClB,UAAU;QAAA;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC,eAET3G,OAAA,CAACb,GAAG;UAACwG,EAAE,EAAE;YAAEoC,OAAO,EAAE,MAAM;YAAEC,GAAG,EAAE,CAAC;YAAEI,UAAU,EAAE;UAAS,CAAE;UAAAnC,QAAA,gBACzDjG,OAAA,CAACV,SAAS;YACR4J,IAAI,EAAC,QAAQ;YACb7B,KAAK,EAAC,cAAc;YACpB9B,KAAK,EAAEvD,WAAY;YACnBmH,QAAQ,EAAG9F,CAAC,IAAKpB,cAAc,CAACmH,MAAM,CAAC/F,CAAC,CAACgG,MAAM,CAAC9D,KAAK,CAAC,CAAE;YACxDyD,QAAQ,EAAE,CAACL,aAAa,IAAI,CAACE,QAAS;YACtCvB,IAAI,EAAC,OAAO;YACZ3B,EAAE,EAAE;cAAEC,KAAK,EAAE;YAAI;UAAE;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC,eACF3G,OAAA,CAACX,MAAM;YACLiJ,OAAO,EAAC,WAAW;YACnBb,KAAK,EAAC,WAAW;YACjBc,OAAO,EAAEtD,WAAY;YACrB+D,QAAQ,EAAE,CAACL,aAAa,IAAI,CAACE,QAAQ,IAAI7G,WAAW,GAAGvB,SAAS,CAACqI,YAAa;YAC9EnD,EAAE,EAAE;cAAEsD,QAAQ,EAAE;YAAI,CAAE;YAAAhD,QAAA,EACvB;UAED;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAEN3G,OAAA,CAACX,MAAM;UACLiJ,OAAO,EAAC,WAAW;UACnBb,KAAK,EAAC,OAAO;UACbc,OAAO,EAAEnD,UAAW;UACpB4D,QAAQ,EAAE,CAACL,aAAc;UACzBhD,EAAE,EAAE;YAAEsD,QAAQ,EAAE;UAAI,CAAE;UAAAhD,QAAA,EACvB;QAED;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EAELgC,aAAa,iBACZ3I,OAAA,CAACZ,UAAU;QAACqI,KAAK,EAAC,SAAS;QAAC9B,EAAE,EAAE;UAAEsC,EAAE,EAAE,CAAC;UAAEqB,SAAS,EAAE;QAAS,CAAE;QAAArD,QAAA,EAAC;MAEhE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CACb;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAEZ,CAAC;EAED,MAAM4C,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAI,CAAC9I,SAAS,EAAE,OAAO,IAAI;IAE3B,oBACET,OAAA,CAACT,KAAK;MAACoG,EAAE,EAAE;QAAEd,CAAC,EAAE,CAAC;QAAE2E,EAAE,EAAE,CAAC;QAAEhC,OAAO,EAAE;MAAmB,CAAE;MAAAvB,QAAA,gBACtDjG,OAAA,CAACZ,UAAU;QAACkJ,OAAO,EAAC,IAAI;QAACmB,YAAY;QAAAxD,QAAA,GAAC,cACxB,EAACxF,SAAS,CAACiJ,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGnJ,SAAS,CAACiJ,KAAK,CAACG,KAAK,CAAC,CAAC,CAAC;MAAA;QAAArD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrE,CAAC,eACb3G,OAAA,CAACZ,UAAU;QAAA6G,QAAA,GAAC,gBACI,EAACxF,SAAS,CAACuE,UAAU;MAAA;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACb3G,OAAA,CAACZ,UAAU;QAAA6G,QAAA,GAAC,kBACM,EAACxF,SAAS,CAACqI,YAAY;MAAA;QAAAtC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,EACZlG,SAAS,CAACqJ,UAAU,iBACnB9J,OAAA,CAACZ,UAAU;QAAA6G,QAAA,GAAC,eACG,EAACxF,SAAS,CAACqJ,UAAU,EAAC,IAAE,EAACrJ,SAAS,CAACsJ,gBAAgB,GAAG,CAAC,GAAG,KAAKtJ,SAAS,CAACsJ,gBAAgB,GAAG,GAAG,EAAE;MAAA;QAAAvD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpG,CACb;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAEZ,CAAC;EAED,MAAMqD,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAI,CAAC5H,cAAc,EAAE,OAAO,IAAI;IAEhC,MAAM6H,MAAM,GAAGxJ,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEkE,OAAO,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAK1C,cAAc,CAAC6H,MAAM,CAAC;IAC3E,MAAMC,WAAW,GAAG9H,cAAc,CAACuC,OAAO,CAACwC,GAAG,CAACgD,EAAE,IAAI;MACnD,MAAMtD,MAAM,GAAGpG,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEkE,OAAO,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKqF,EAAE,CAACrF,EAAE,CAAC;MAC3D,OAAO;QAAE+B,MAAM;QAAEuD,IAAI,EAAED,EAAE,CAACC;MAAK,CAAC;IAClC,CAAC,CAAC;IAEF,oBACEpK,OAAA,CAACJ,MAAM;MACLyK,IAAI,EAAE,IAAK;MACXC,QAAQ,EAAC,IAAI;MACbC,SAAS;MAAAtE,QAAA,gBAETjG,OAAA,CAACH,WAAW;QAAAoG,QAAA,EAAC;MAAgB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eAC3C3G,OAAA,CAACF,aAAa;QAAAmG,QAAA,eACZjG,OAAA,CAACb,GAAG;UAACwG,EAAE,EAAE;YAAEd,CAAC,EAAE;UAAE,CAAE;UAAAoB,QAAA,gBAChBjG,OAAA,CAACZ,UAAU;YAACkJ,OAAO,EAAC,IAAI;YAACb,KAAK,EAAC,SAAS;YAACgC,YAAY;YAAAxD,QAAA,GAAC,UAC5C,EAACgE,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEO,IAAI,EAAC,QAAM,EAACpI,cAAc,CAACgI,IAAI;UAAA;YAAA5D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CAAC,eACb3G,OAAA,CAACR,IAAI;YAAAyG,QAAA,EACFiE,WAAW,CAAC/C,GAAG,CAAC,CAAC;cAAEN,MAAM;cAAEuD;YAAK,CAAC,kBAChCpK,OAAA,CAACP,QAAQ;cAAAwG,QAAA,eACPjG,OAAA,CAACN,YAAY;gBACX+K,OAAO,EAAE5D,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAE2D,IAAK;gBACtBE,SAAS,EAAE,SAASN,IAAI;cAAG;gBAAA5D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5B;YAAC,GAJWE,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAE/B,EAAE;cAAA0B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAKf,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAEb,CAAC;EAED,oBACE3G,OAAA;IAAK2K,SAAS,EAAC,KAAK;IAAA1E,QAAA,gBAClBjG,OAAA;MAAQ2K,SAAS,EAAC,YAAY;MAAA1E,QAAA,gBAC5BjG,OAAA;QAAAiG,QAAA,EAAI;MAAmB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC3B,CAACxG,WAAW,iBACXH,OAAA;QAAQuI,OAAO,EAAEA,CAAA,KAAMnI,cAAc,CAAC,IAAI,CAAE;QAAA6F,QAAA,EAAC;MAE7C;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC,eACT3G,OAAA;MAAM2K,SAAS,EAAC,YAAY;MAAA1E,QAAA,EACzB9F,WAAW,gBACVH,OAAA;QAAK2K,SAAS,EAAC,cAAc;QAAA1E,QAAA,gBAC3BjG,OAAA;UAAK2K,SAAS,EAAC;QAAiB;UAAAnE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAE3B,CAAC,eACN3G,OAAA;UAAK2K,SAAS,EAAC;QAAa;UAAAnE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEvB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,gBAEN3G,OAAA;QAAK2K,SAAS,EAAC,gBAAgB;QAAA1E,QAAA,gBAC7BjG,OAAA;UAAAiG,QAAA,EAAG;QAA+B;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACtC3G,OAAA;UAAAiG,QAAA,EAAG;QAAmC;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACzG,EAAA,CAzaQD,GAAG;AAAA2K,EAAA,GAAH3K,GAAG;AA2aZ,eAAeA,GAAG;AAAC,IAAA2K,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}