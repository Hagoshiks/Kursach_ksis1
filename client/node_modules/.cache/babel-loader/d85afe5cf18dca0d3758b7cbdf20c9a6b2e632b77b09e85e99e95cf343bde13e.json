{"ast":null,"code":"var _jsxFileName = \"R:\\\\\\u0423\\u041D\\u0418\\u041A\\\\2 \\u043A\\u0443\\u0440\\u0441 2 \\u0441\\u0435\\u043C\\\\\\u041A\\u0421\\u0438\\u0421\\\\Kursach\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport { Box, Typography, Button, TextField, Paper, List, ListItem, ListItemText, Chip, Dialog, DialogTitle, DialogContent } from '@mui/material';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [socket, setSocket] = useState(null);\n  const [playerName, setPlayerName] = useState('');\n  const [gameState, setGameState] = useState(null);\n  const [betAmount, setBetAmount] = useState(0);\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [error, setError] = useState('');\n  const [authDialogOpen, setAuthDialogOpen] = useState(true);\n  const [authTab, setAuthTab] = useState(1);\n  const [authError, setAuthError] = useState('');\n  const [authState, setAuthState] = useState({\n    isAuthenticated: false,\n    token: null,\n    user: null\n  });\n  const [authForm, setAuthForm] = useState({\n    username: '',\n    password: ''\n  });\n  const [raiseAmount, setRaiseAmount] = useState(0);\n  const [canAct, setCanAct] = useState(false);\n  const [showdownResult, setShowdownResult] = useState(null);\n  const [showCards, setShowCards] = useState(false);\n  useEffect(() => {\n    // Check for stored token\n    const token = localStorage.getItem('token');\n    const user = localStorage.getItem('user');\n    if (token && user) {\n      setAuthState({\n        isAuthenticated: true,\n        token,\n        user: JSON.parse(user)\n      });\n      setAuthDialogOpen(false);\n    }\n  }, []);\n  useEffect(() => {\n    if (authState.isAuthenticated && authState.token) {\n      const newSocket = io('http://localhost:5000', {\n        auth: {\n          token: authState.token\n        }\n      });\n      setSocket(newSocket);\n      newSocket.on('gameState', state => {\n        setGameState(state);\n      });\n      newSocket.on('error', message => {\n        setError(message);\n      });\n      newSocket.on('showdown', result => {\n        setShowdownResult(result);\n        // Hide showdown after 5 seconds\n        setTimeout(() => setShowdownResult(null), 5000);\n      });\n      return () => {\n        newSocket.close();\n      };\n    }\n  }, [authState]);\n  const handleAuthSubmit = async e => {\n    e.preventDefault();\n    setAuthError('');\n    const endpoint = authTab === 0 ? '/api/auth/signin' : '/api/auth/signup';\n    try {\n      const response = await fetch(`http://localhost:5000${endpoint}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(authForm)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setAuthState({\n          isAuthenticated: true,\n          token: data.token,\n          user: data.user\n        });\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('user', JSON.stringify(data.user));\n        setAuthDialogOpen(false);\n        setAuthForm({\n          username: '',\n          password: ''\n        });\n      } else {\n        setAuthError(data.message || 'Authentication failed');\n      }\n    } catch (err) {\n      console.error('Auth error:', err);\n      setAuthError('Cannot connect to server. Please make sure the server is running and MongoDB is installed.');\n    }\n  };\n  const handleLogout = () => {\n    setAuthState({\n      isAuthenticated: false,\n      token: null,\n      user: null\n    });\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    if (socket) {\n      socket.close();\n    }\n  };\n  const handleJoinGame = () => {\n    if (socket && playerName) {\n      socket.emit('joinGame', playerName);\n    }\n  };\n  const placeBet = () => {\n    if (socket && betAmount > 0) {\n      socket.emit('placeBet', betAmount);\n      setBetAmount(0);\n    }\n  };\n  const handleCall = () => {\n    if (socket && gameState) {\n      const currentPlayer = gameState.players.find(p => p.id === socket.id);\n      if (currentPlayer) {\n        const callAmount = gameState.currentBet - currentPlayer.currentBet;\n        socket.emit('placeBet', callAmount);\n      }\n    }\n  };\n  const handleRaise = () => {\n    if (socket && gameState && raiseAmount > 0) {\n      const currentPlayer = gameState.players.find(p => p.id === socket.id);\n      if (currentPlayer) {\n        const totalBet = gameState.currentBet + raiseAmount;\n        if (totalBet <= currentPlayer.chips) {\n          socket.emit('placeBet', totalBet);\n          setRaiseAmount(0);\n        }\n      }\n    }\n  };\n  const handleFold = () => {\n    if (socket) {\n      socket.emit('fold');\n    }\n  };\n  const getCardImage = card => {\n    const value = card.value === '10' ? '0' : card.value;\n    const suit = card.suit === 'hearts' ? 'H' : card.suit === 'diamonds' ? 'D' : card.suit === 'clubs' ? 'C' : 'S';\n    return `https://deckofcardsapi.com/static/img/${value}${suit}.png`;\n  };\n  const renderCard = card => {\n    const suitSymbols = {\n      hearts: '♥',\n      diamonds: '♦',\n      clubs: '♣',\n      spades: '♠'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `card-value ${card.suit}`,\n        children: [card.value, suitSymbols[card.suit]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)\n    }, `${card.value}${card.suit}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this);\n  };\n  const renderPlayerStatus = player => {\n    const statuses = [];\n    if (player.isDealer) statuses.push('D');\n    if (player.isSmallBlind) statuses.push('SB');\n    if (player.isBigBlind) statuses.push('BB');\n    return statuses.map(status => /*#__PURE__*/_jsxDEV(Chip, {\n      label: status,\n      size: \"small\",\n      sx: {\n        ml: 1,\n        bgcolor: 'primary.main',\n        color: 'white'\n      }\n    }, status, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this));\n  };\n  const renderPlayerCards = player => {\n    if (player.cards.length === 0) return null;\n    const isCurrentPlayer = player.id === (socket === null || socket === void 0 ? void 0 : socket.id);\n    const shouldShowCards = isCurrentPlayer && showCards;\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        gap: 1,\n        mt: 2,\n        justifyContent: 'center',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          gap: 1\n        },\n        children: player.cards.map((card, index) => renderCard(card))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), isCurrentPlayer && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        size: \"small\",\n        onClick: () => setShowCards(!showCards),\n        sx: {\n          mt: 1\n        },\n        children: showCards ? 'Hide Cards' : 'Show Cards'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this);\n  };\n  const renderGameControls = () => {\n    var _gameState$players$ga;\n    if (!gameState || !socket) return null;\n    const currentPlayer = gameState.players.find(p => p.id === socket.id);\n    if (!currentPlayer || !currentPlayer.isActive) return null;\n    const isCurrentTurn = ((_gameState$players$ga = gameState.players[gameState.currentPlayer]) === null || _gameState$players$ga === void 0 ? void 0 : _gameState$players$ga.id) === socket.id;\n    const callAmount = gameState.currentBet - currentPlayer.currentBet;\n    const canCall = callAmount > 0 && callAmount <= currentPlayer.chips;\n    const canRaise = gameState.minimumRaise <= currentPlayer.chips - gameState.currentBet;\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          gap: 2,\n          justifyContent: 'center',\n          alignItems: 'center',\n          flexWrap: 'wrap'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleCall,\n          disabled: !isCurrentTurn || !canCall,\n          sx: {\n            minWidth: 100\n          },\n          children: [\"Call $\", callAmount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 1,\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            type: \"number\",\n            label: \"Raise Amount\",\n            value: raiseAmount,\n            onChange: e => setRaiseAmount(Number(e.target.value)),\n            disabled: !isCurrentTurn || !canRaise,\n            size: \"small\",\n            sx: {\n              width: 120\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            onClick: handleRaise,\n            disabled: !isCurrentTurn || !canRaise || raiseAmount < gameState.minimumRaise,\n            sx: {\n              minWidth: 100\n            },\n            children: \"Raise\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"error\",\n          onClick: handleFold,\n          disabled: !isCurrentTurn,\n          sx: {\n            minWidth: 100\n          },\n          children: \"Fold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), isCurrentTurn && /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"primary\",\n        sx: {\n          mt: 1,\n          textAlign: 'center'\n        },\n        children: \"Your turn to act\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this);\n  };\n  const renderGameInfo = () => {\n    if (!gameState) return null;\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2,\n        mb: 2,\n        bgcolor: 'background.paper'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: [\"Game Phase: \", gameState.phase.charAt(0).toUpperCase() + gameState.phase.slice(1)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Current Bet: $\", gameState.currentBet]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Minimum Raise: $\", gameState.minimumRaise]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), gameState.lastAction && /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Last Action: \", gameState.lastAction, \" $\", gameState.lastActionAmount > 0 ? `($${gameState.lastActionAmount})` : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this);\n  };\n  const renderShowdown = () => {\n    if (!showdownResult) return null;\n    const winner = gameState === null || gameState === void 0 ? void 0 : gameState.players.find(p => p.id === showdownResult.winner);\n    const playerHands = showdownResult.players.map(ph => {\n      const player = gameState === null || gameState === void 0 ? void 0 : gameState.players.find(p => p.id === ph.id);\n      return {\n        player,\n        hand: ph.hand\n      };\n    });\n    return /*#__PURE__*/_jsxDEV(Dialog, {\n      open: true,\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Showdown Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"primary\",\n            gutterBottom: true,\n            children: [\"Winner: \", winner === null || winner === void 0 ? void 0 : winner.name, \" with \", showdownResult.hand]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: playerHands.map(({\n              player,\n              hand\n            }) => /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: player === null || player === void 0 ? void 0 : player.name,\n                secondary: `Hand: ${hand}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 19\n              }, this)\n            }, player === null || player === void 0 ? void 0 : player.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Texas Hold'em Poker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this), !isConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"join-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your name\",\n          value: playerName,\n          onChange: e => setPlayerName(e.target.value),\n          className: \"name-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsConnected(true),\n          disabled: !playerName.trim(),\n          children: \"Join Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Welcome, \", playerName, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"game-table\",\n      children: isConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-content\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 23\n        }, this), gameState ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"community-cards\",\n            children: gameState.communityCards.map(renderCard)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-area\",\n            children: gameState.players.map(player => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: player.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"player-cards\",\n                children: renderPlayerCards(player)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Chips: $\", player.chips]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Current Bet: $\", player.currentBet]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 23\n              }, this)]\n            }, player.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"waiting-message\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Waiting for game to start...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome-screen\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Welcome to Texas Hold'em Poker!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Enter your name and click \\\"Join Game\\\" to start playing.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 419,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2I9pK9tc3qjLEOA1qzvbdc1zvP8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","Box","Typography","Button","TextField","Paper","List","ListItem","ListItemText","Chip","Dialog","DialogTitle","DialogContent","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isConnected","setIsConnected","socket","setSocket","playerName","setPlayerName","gameState","setGameState","betAmount","setBetAmount","drawerOpen","setDrawerOpen","error","setError","authDialogOpen","setAuthDialogOpen","authTab","setAuthTab","authError","setAuthError","authState","setAuthState","isAuthenticated","token","user","authForm","setAuthForm","username","password","raiseAmount","setRaiseAmount","canAct","setCanAct","showdownResult","setShowdownResult","showCards","setShowCards","localStorage","getItem","JSON","parse","newSocket","auth","on","state","message","result","setTimeout","close","handleAuthSubmit","e","preventDefault","endpoint","response","fetch","method","headers","body","stringify","data","json","ok","setItem","err","console","handleLogout","removeItem","handleJoinGame","emit","placeBet","handleCall","currentPlayer","players","find","p","id","callAmount","currentBet","handleRaise","totalBet","chips","handleFold","getCardImage","card","value","suit","renderCard","suitSymbols","hearts","diamonds","clubs","spades","className","children","fileName","_jsxFileName","lineNumber","columnNumber","renderPlayerStatus","player","statuses","isDealer","push","isSmallBlind","isBigBlind","map","status","label","size","sx","ml","bgcolor","color","renderPlayerCards","cards","length","isCurrentPlayer","shouldShowCards","display","gap","mt","justifyContent","flexDirection","alignItems","index","variant","onClick","renderGameControls","_gameState$players$ga","isActive","isCurrentTurn","canCall","canRaise","minimumRaise","flexWrap","disabled","minWidth","type","onChange","Number","target","width","textAlign","renderGameInfo","mb","gutterBottom","phase","charAt","toUpperCase","slice","lastAction","lastActionAmount","renderShowdown","winner","playerHands","ph","hand","open","maxWidth","fullWidth","name","primary","secondary","placeholder","trim","communityCards","_c","$RefreshReg$"],"sources":["R:/УНИК/2 курс 2 сем/КСиС/Kursach/client/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { io, Socket } from 'socket.io-client';\nimport { Box, Container, Typography, Button, TextField, Grid, Paper, AppBar, Toolbar, Drawer, List, ListItem, ListItemText, ListItemIcon, Chip, Dialog, DialogTitle, DialogContent, DialogActions, Tabs, Tab } from '@mui/material';\nimport CasinoIcon from '@mui/icons-material/Casino';\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\nimport PeopleIcon from '@mui/icons-material/People';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport HelpIcon from '@mui/icons-material/Help';\nimport LoginIcon from '@mui/icons-material/Login';\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\nimport './App.css';\n\ninterface Card {\n  suit: 'hearts' | 'diamonds' | 'clubs' | 'spades';\n  value: '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10' | 'J' | 'Q' | 'K' | 'A';\n}\n\ninterface Player {\n  id: string;\n  name: string;\n  chips: number;\n  cards: Card[];\n  isActive: boolean;\n  currentBet: number;\n  isDealer: boolean;\n  isSmallBlind: boolean;\n  isBigBlind: boolean;\n}\n\ninterface GameState {\n  players: Player[];\n  communityCards: Card[];\n  pot: number;\n  currentPlayer: number;\n  dealer: number;\n  smallBlind: number;\n  bigBlind: number;\n  currentBet: number;\n  minimumRaise: number;\n  phase: 'waiting' | 'preflop' | 'flop' | 'turn' | 'river' | 'showdown';\n  lastAction: string;\n  lastActionAmount: number;\n}\n\ninterface AuthState {\n  isAuthenticated: boolean;\n  token: string | null;\n  user: {\n    id: string;\n    username: string;\n    chips: number;\n  } | null;\n}\n\ninterface ShowdownResult {\n  winner: string;\n  hand: string;\n  players: {\n    id: string;\n    hand: string;\n  }[];\n}\n\nfunction App() {\n  const [isConnected, setIsConnected] = useState(false);\n  const [socket, setSocket] = useState<Socket | null>(null);\n  const [playerName, setPlayerName] = useState('');\n  const [gameState, setGameState] = useState<GameState | null>(null);\n  const [betAmount, setBetAmount] = useState(0);\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [error, setError] = useState('');\n  const [authDialogOpen, setAuthDialogOpen] = useState(true);\n  const [authTab, setAuthTab] = useState(1);\n  const [authError, setAuthError] = useState('');\n  const [authState, setAuthState] = useState<AuthState>({\n    isAuthenticated: false,\n    token: null,\n    user: null\n  });\n  const [authForm, setAuthForm] = useState({\n    username: '',\n    password: ''\n  });\n  const [raiseAmount, setRaiseAmount] = useState(0);\n  const [canAct, setCanAct] = useState(false);\n  const [showdownResult, setShowdownResult] = useState<ShowdownResult | null>(null);\n  const [showCards, setShowCards] = useState(false);\n\n  useEffect(() => {\n    // Check for stored token\n    const token = localStorage.getItem('token');\n    const user = localStorage.getItem('user');\n    if (token && user) {\n      setAuthState({\n        isAuthenticated: true,\n        token,\n        user: JSON.parse(user)\n      });\n      setAuthDialogOpen(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (authState.isAuthenticated && authState.token) {\n      const newSocket = io('http://localhost:5000', {\n        auth: {\n          token: authState.token\n        }\n      });\n      setSocket(newSocket);\n\n      newSocket.on('gameState', (state: GameState) => {\n        setGameState(state);\n      });\n\n      newSocket.on('error', (message: string) => {\n        setError(message);\n      });\n\n      newSocket.on('showdown', (result: ShowdownResult) => {\n        setShowdownResult(result);\n        // Hide showdown after 5 seconds\n        setTimeout(() => setShowdownResult(null), 5000);\n      });\n\n      return () => {\n        newSocket.close();\n      };\n    }\n  }, [authState]);\n\n  const handleAuthSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setAuthError('');\n    const endpoint = authTab === 0 ? '/api/auth/signin' : '/api/auth/signup';\n    \n    try {\n      const response = await fetch(`http://localhost:5000${endpoint}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(authForm)\n      });\n\n      const data = await response.json();\n      \n      if (response.ok) {\n        setAuthState({\n          isAuthenticated: true,\n          token: data.token,\n          user: data.user\n        });\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('user', JSON.stringify(data.user));\n        setAuthDialogOpen(false);\n        setAuthForm({ username: '', password: '' });\n      } else {\n        setAuthError(data.message || 'Authentication failed');\n      }\n    } catch (err) {\n      console.error('Auth error:', err);\n      setAuthError('Cannot connect to server. Please make sure the server is running and MongoDB is installed.');\n    }\n  };\n\n  const handleLogout = () => {\n    setAuthState({\n      isAuthenticated: false,\n      token: null,\n      user: null\n    });\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    if (socket) {\n      socket.close();\n    }\n  };\n\n  const handleJoinGame = () => {\n    if (socket && playerName) {\n      socket.emit('joinGame', playerName);\n    }\n  };\n\n  const placeBet = () => {\n    if (socket && betAmount > 0) {\n      socket.emit('placeBet', betAmount);\n      setBetAmount(0);\n    }\n  };\n\n  const handleCall = () => {\n    if (socket && gameState) {\n      const currentPlayer = gameState.players.find(p => p.id === socket.id);\n      if (currentPlayer) {\n        const callAmount = gameState.currentBet - currentPlayer.currentBet;\n        socket.emit('placeBet', callAmount);\n      }\n    }\n  };\n\n  const handleRaise = () => {\n    if (socket && gameState && raiseAmount > 0) {\n      const currentPlayer = gameState.players.find(p => p.id === socket.id);\n      if (currentPlayer) {\n        const totalBet = gameState.currentBet + raiseAmount;\n        if (totalBet <= currentPlayer.chips) {\n          socket.emit('placeBet', totalBet);\n          setRaiseAmount(0);\n        }\n      }\n    }\n  };\n\n  const handleFold = () => {\n    if (socket) {\n      socket.emit('fold');\n    }\n  };\n\n  const getCardImage = (card: Card) => {\n    const value = card.value === '10' ? '0' : card.value;\n    const suit = card.suit === 'hearts' ? 'H' : \n                 card.suit === 'diamonds' ? 'D' : \n                 card.suit === 'clubs' ? 'C' : 'S';\n    return `https://deckofcardsapi.com/static/img/${value}${suit}.png`;\n  };\n\n  const renderCard = (card: Card) => {\n    const suitSymbols = {\n      hearts: '♥',\n      diamonds: '♦',\n      clubs: '♣',\n      spades: '♠'\n    };\n    return (\n      <div className=\"card\" key={`${card.value}${card.suit}`}>\n        <span className={`card-value ${card.suit}`}>\n          {card.value}{suitSymbols[card.suit]}\n        </span>\n      </div>\n    );\n  };\n\n  const renderPlayerStatus = (player: Player) => {\n    const statuses = [];\n    if (player.isDealer) statuses.push('D');\n    if (player.isSmallBlind) statuses.push('SB');\n    if (player.isBigBlind) statuses.push('BB');\n    return statuses.map(status => (\n      <Chip\n        key={status}\n        label={status}\n        size=\"small\"\n        sx={{ ml: 1, bgcolor: 'primary.main', color: 'white' }}\n      />\n    ));\n  };\n\n  const renderPlayerCards = (player: Player) => {\n    if (player.cards.length === 0) return null;\n    \n    const isCurrentPlayer = player.id === socket?.id;\n    const shouldShowCards = isCurrentPlayer && showCards;\n\n    return (\n      <Box sx={{ \n        display: 'flex', \n        gap: 1, \n        mt: 2,\n        justifyContent: 'center',\n        flexDirection: 'column',\n        alignItems: 'center'\n      }}>\n        <Box sx={{ display: 'flex', gap: 1 }}>\n          {player.cards.map((card, index) => renderCard(card))}\n        </Box>\n        {isCurrentPlayer && (\n          <Button\n            variant=\"outlined\"\n            size=\"small\"\n            onClick={() => setShowCards(!showCards)}\n            sx={{ mt: 1 }}\n          >\n            {showCards ? 'Hide Cards' : 'Show Cards'}\n          </Button>\n        )}\n      </Box>\n    );\n  };\n\n  const renderGameControls = () => {\n    if (!gameState || !socket) return null;\n\n    const currentPlayer = gameState.players.find(p => p.id === socket.id);\n    if (!currentPlayer || !currentPlayer.isActive) return null;\n\n    const isCurrentTurn = gameState.players[gameState.currentPlayer]?.id === socket.id;\n    const callAmount = gameState.currentBet - currentPlayer.currentBet;\n    const canCall = callAmount > 0 && callAmount <= currentPlayer.chips;\n    const canRaise = gameState.minimumRaise <= currentPlayer.chips - gameState.currentBet;\n\n    return (\n      <Paper sx={{ p: 2 }}>\n        <Box sx={{ display: 'flex', gap: 2, justifyContent: 'center', alignItems: 'center', flexWrap: 'wrap' }}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleCall}\n            disabled={!isCurrentTurn || !canCall}\n            sx={{ minWidth: 100 }}\n          >\n            Call ${callAmount}\n          </Button>\n          \n          <Box sx={{ display: 'flex', gap: 1, alignItems: 'center' }}>\n            <TextField\n              type=\"number\"\n              label=\"Raise Amount\"\n              value={raiseAmount}\n              onChange={(e) => setRaiseAmount(Number(e.target.value))}\n              disabled={!isCurrentTurn || !canRaise}\n              size=\"small\"\n              sx={{ width: 120 }}\n            />\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={handleRaise}\n              disabled={!isCurrentTurn || !canRaise || raiseAmount < gameState.minimumRaise}\n              sx={{ minWidth: 100 }}\n            >\n              Raise\n            </Button>\n          </Box>\n\n          <Button\n            variant=\"contained\"\n            color=\"error\"\n            onClick={handleFold}\n            disabled={!isCurrentTurn}\n            sx={{ minWidth: 100 }}\n          >\n            Fold\n          </Button>\n        </Box>\n\n        {isCurrentTurn && (\n          <Typography color=\"primary\" sx={{ mt: 1, textAlign: 'center' }}>\n            Your turn to act\n          </Typography>\n        )}\n      </Paper>\n    );\n  };\n\n  const renderGameInfo = () => {\n    if (!gameState) return null;\n\n    return (\n      <Paper sx={{ p: 2, mb: 2, bgcolor: 'background.paper' }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Game Phase: {gameState.phase.charAt(0).toUpperCase() + gameState.phase.slice(1)}\n        </Typography>\n        <Typography>\n          Current Bet: ${gameState.currentBet}\n        </Typography>\n        <Typography>\n          Minimum Raise: ${gameState.minimumRaise}\n        </Typography>\n        {gameState.lastAction && (\n          <Typography>\n            Last Action: {gameState.lastAction} ${gameState.lastActionAmount > 0 ? `($${gameState.lastActionAmount})` : ''}\n          </Typography>\n        )}\n      </Paper>\n    );\n  };\n\n  const renderShowdown = () => {\n    if (!showdownResult) return null;\n\n    const winner = gameState?.players.find(p => p.id === showdownResult.winner);\n    const playerHands = showdownResult.players.map(ph => {\n      const player = gameState?.players.find(p => p.id === ph.id);\n      return { player, hand: ph.hand };\n    });\n\n    return (\n      <Dialog\n        open={true}\n        maxWidth=\"sm\"\n        fullWidth\n      >\n        <DialogTitle>Showdown Results</DialogTitle>\n        <DialogContent>\n          <Box sx={{ p: 2 }}>\n            <Typography variant=\"h6\" color=\"primary\" gutterBottom>\n              Winner: {winner?.name} with {showdownResult.hand}\n            </Typography>\n            <List>\n              {playerHands.map(({ player, hand }) => (\n                <ListItem key={player?.id}>\n                  <ListItemText\n                    primary={player?.name}\n                    secondary={`Hand: ${hand}`}\n                  />\n                </ListItem>\n              ))}\n            </List>\n          </Box>\n        </DialogContent>\n      </Dialog>\n    );\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <h1>Texas Hold'em Poker</h1>\n        {!isConnected ? (\n          <div className=\"join-form\">\n            <input\n              type=\"text\"\n              placeholder=\"Enter your name\"\n              value={playerName}\n              onChange={(e) => setPlayerName(e.target.value)}\n              className=\"name-input\"\n            />\n            <button \n              onClick={() => setIsConnected(true)}\n              disabled={!playerName.trim()}\n            >\n              Join Game\n            </button>\n          </div>\n        ) : (\n          <div className=\"game-info\">\n            <p>Welcome, {playerName}!</p>\n          </div>\n        )}\n      </header>\n      <main className=\"game-table\">\n        {isConnected ? (\n          <div className=\"game-content\">\n            {error && <div className=\"error-message\">{error}</div>}\n            {gameState ? (\n              <>\n                <div className=\"community-cards\">\n                  {gameState.communityCards.map(renderCard)}\n                </div>\n                <div className=\"player-area\">\n                  {gameState.players.map(player => (\n                    <div key={player.id} className=\"player\">\n                      <h3>{player.name}</h3>\n                      <div className=\"player-cards\">\n                        {renderPlayerCards(player)}\n                      </div>\n                      <p>Chips: ${player.chips}</p>\n                      <p>Current Bet: ${player.currentBet}</p>\n                    </div>\n                  ))}\n                </div>\n              </>\n            ) : (\n              <div className=\"waiting-message\">\n                <p>Waiting for game to start...</p>\n              </div>\n            )}\n          </div>\n        ) : (\n          <div className=\"welcome-screen\">\n            <p>Welcome to Texas Hold'em Poker!</p>\n            <p>Enter your name and click \"Join Game\" to start playing.</p>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}